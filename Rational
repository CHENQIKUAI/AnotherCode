#include <iostream>
using namespace std;
class Rational {
public:
	Rational(int n = 0, int d = 1);
	Rational add(const Rational &right);
	Rational subtract(const Rational &right);
	Rational multiply(const Rational &right);
	Rational divide(const Rational &right);
	bool equals(const Rational &right);
	double doubleValue();
	void print() const;
	int getNumerator();
	int getDenominator();
private:
	int numerator;	    // 分子
	int denominator;	    // 分母
	int gcd(int n, int d);  // 求最大公约数
};
int Rational::getNumerator() {
	return numerator;
}
int Rational::getDenominator() {
	return denominator;
}
double Rational::doubleValue() {
	return numerator * 1.0 / denominator;
}
bool Rational::equals(const Rational &right) {
	if (numerator == right.numerator && denominator == right.denominator)
		return 1;
	return 0;
}
Rational::Rational(int n, int d) {
	int g = gcd(n, d);
	if (d < 0) {
		n = -n;
		d = -d;
	}
	numerator = n / g;
	denominator = d / g;
}

void Rational::print() const {
	if (denominator == 0) {
		cout << "inf" << endl;
	} else {
		cout << numerator;
		if (numerator != 0 && denominator != 1)
			cout << "/" << denominator << endl;
		else
			cout << endl;
	}
}
int Rational::gcd(int m, int n) {
	if ((m == 0) && (n == 0))
		return 0;
	if (m == 0)
		return n;
	if (n == 0)
		return m;
	if (m < 0)
		m = -m;
	if (n < 0)
		n = -n;
	int r;
	while (true) {
		r = m % n;
		if (r == 0)
			break;
		m = n;
		n = r;
	}
	return n;
}
Rational Rational::add(const Rational &right) {
	int n = numerator * right.denominator + denominator * right.numerator;
	int d = denominator * right.denominator;
	return Rational(n, d);
}
Rational Rational::subtract(const Rational &right) {
	int n = numerator * right.denominator - denominator * right.numerator;
	int d = denominator * right.denominator;
	return Rational(n, d);
}

Rational Rational::multiply(const Rational &right) {
	int n = numerator * right.numerator;
	int d = denominator * right.denominator;
	return Rational(n, d);
}

Rational Rational::divide(const Rational &right) {
	int n = numerator * right.denominator;
	int d = denominator *  right.numerator;
	return Rational(n, d);
}

int main() {
	int x, y;
	char ignore;
	cin >> x >> ignore >> y;
	Rational a(x, y);
	cin >> x >> ignore >> y;
	Rational b(x, y);
	Rational c;
	a.print();
	b.print();
	c = a.add(b);
	c.print();
	c = a.subtract(b);
	c.print();
	c = a.multiply(b);
	c.print();
	c = a.divide(b);
	c.print();
	cout << (a.equals(b) ? "a==b" : "a!=b") << endl;
	cout << b.doubleValue() << endl;
	return 0;
}
